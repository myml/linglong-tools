/*
linglong仓库

玲珑仓库接口

API version: 1.0.0
Contact: wurongjie@deepin.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiserver

import (
	"encoding/json"
)

// checks if the ResponseUploadTaskResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseUploadTaskResp{}

// ResponseUploadTaskResp struct for ResponseUploadTaskResp
type ResponseUploadTaskResp struct {
	WatchId *string `json:"watchId,omitempty"`
}

// NewResponseUploadTaskResp instantiates a new ResponseUploadTaskResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseUploadTaskResp() *ResponseUploadTaskResp {
	this := ResponseUploadTaskResp{}
	return &this
}

// NewResponseUploadTaskRespWithDefaults instantiates a new ResponseUploadTaskResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseUploadTaskRespWithDefaults() *ResponseUploadTaskResp {
	this := ResponseUploadTaskResp{}
	return &this
}

// GetWatchId returns the WatchId field value if set, zero value otherwise.
func (o *ResponseUploadTaskResp) GetWatchId() string {
	if o == nil || IsNil(o.WatchId) {
		var ret string
		return ret
	}
	return *o.WatchId
}

// GetWatchIdOk returns a tuple with the WatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseUploadTaskResp) GetWatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.WatchId) {
		return nil, false
	}
	return o.WatchId, true
}

// HasWatchId returns a boolean if a field has been set.
func (o *ResponseUploadTaskResp) HasWatchId() bool {
	if o != nil && !IsNil(o.WatchId) {
		return true
	}

	return false
}

// SetWatchId gets a reference to the given string and assigns it to the WatchId field.
func (o *ResponseUploadTaskResp) SetWatchId(v string) {
	o.WatchId = &v
}

func (o ResponseUploadTaskResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseUploadTaskResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WatchId) {
		toSerialize["watchId"] = o.WatchId
	}
	return toSerialize, nil
}

type NullableResponseUploadTaskResp struct {
	value *ResponseUploadTaskResp
	isSet bool
}

func (v NullableResponseUploadTaskResp) Get() *ResponseUploadTaskResp {
	return v.value
}

func (v *NullableResponseUploadTaskResp) Set(val *ResponseUploadTaskResp) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseUploadTaskResp) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseUploadTaskResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseUploadTaskResp(val *ResponseUploadTaskResp) *NullableResponseUploadTaskResp {
	return &NullableResponseUploadTaskResp{value: val, isSet: true}
}

func (v NullableResponseUploadTaskResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseUploadTaskResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


