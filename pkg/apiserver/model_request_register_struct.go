/*
linglong仓库

玲珑仓库接口

API version: 1.0.0
Contact: wurongjie@deepin.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiserver

import (
	"encoding/json"
)

// checks if the RequestRegisterStruct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestRegisterStruct{}

// RequestRegisterStruct struct for RequestRegisterStruct
type RequestRegisterStruct struct {
	AppId *string `json:"appId,omitempty"`
	Arch *string `json:"arch,omitempty"`
	Base *string `json:"base,omitempty"`
	Channel *string `json:"channel,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Module *string `json:"module,omitempty"`
	Name *string `json:"name,omitempty"`
	RepoName *string `json:"repoName,omitempty"`
	Runtime *string `json:"runtime,omitempty"`
	Size *int64 `json:"size,omitempty"`
	UabUrl *string `json:"uabUrl,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewRequestRegisterStruct instantiates a new RequestRegisterStruct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestRegisterStruct() *RequestRegisterStruct {
	this := RequestRegisterStruct{}
	return &this
}

// NewRequestRegisterStructWithDefaults instantiates a new RequestRegisterStruct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestRegisterStructWithDefaults() *RequestRegisterStruct {
	this := RequestRegisterStruct{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *RequestRegisterStruct) SetAppId(v string) {
	o.AppId = &v
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetArch() string {
	if o == nil || IsNil(o.Arch) {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetArchOk() (*string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *RequestRegisterStruct) SetArch(v string) {
	o.Arch = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetBase() string {
	if o == nil || IsNil(o.Base) {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetBaseOk() (*string, bool) {
	if o == nil || IsNil(o.Base) {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasBase() bool {
	if o != nil && !IsNil(o.Base) {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *RequestRegisterStruct) SetBase(v string) {
	o.Base = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *RequestRegisterStruct) SetChannel(v string) {
	o.Channel = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RequestRegisterStruct) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RequestRegisterStruct) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *RequestRegisterStruct) SetKind(v string) {
	o.Kind = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetModule() string {
	if o == nil || IsNil(o.Module) {
		var ret string
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetModuleOk() (*string, bool) {
	if o == nil || IsNil(o.Module) {
		return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasModule() bool {
	if o != nil && !IsNil(o.Module) {
		return true
	}

	return false
}

// SetModule gets a reference to the given string and assigns it to the Module field.
func (o *RequestRegisterStruct) SetModule(v string) {
	o.Module = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RequestRegisterStruct) SetName(v string) {
	o.Name = &v
}

// GetRepoName returns the RepoName field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetRepoName() string {
	if o == nil || IsNil(o.RepoName) {
		var ret string
		return ret
	}
	return *o.RepoName
}

// GetRepoNameOk returns a tuple with the RepoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetRepoNameOk() (*string, bool) {
	if o == nil || IsNil(o.RepoName) {
		return nil, false
	}
	return o.RepoName, true
}

// HasRepoName returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasRepoName() bool {
	if o != nil && !IsNil(o.RepoName) {
		return true
	}

	return false
}

// SetRepoName gets a reference to the given string and assigns it to the RepoName field.
func (o *RequestRegisterStruct) SetRepoName(v string) {
	o.RepoName = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetRuntime() string {
	if o == nil || IsNil(o.Runtime) {
		var ret string
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given string and assigns it to the Runtime field.
func (o *RequestRegisterStruct) SetRuntime(v string) {
	o.Runtime = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *RequestRegisterStruct) SetSize(v int64) {
	o.Size = &v
}

// GetUabUrl returns the UabUrl field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetUabUrl() string {
	if o == nil || IsNil(o.UabUrl) {
		var ret string
		return ret
	}
	return *o.UabUrl
}

// GetUabUrlOk returns a tuple with the UabUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetUabUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UabUrl) {
		return nil, false
	}
	return o.UabUrl, true
}

// HasUabUrl returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasUabUrl() bool {
	if o != nil && !IsNil(o.UabUrl) {
		return true
	}

	return false
}

// SetUabUrl gets a reference to the given string and assigns it to the UabUrl field.
func (o *RequestRegisterStruct) SetUabUrl(v string) {
	o.UabUrl = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RequestRegisterStruct) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestRegisterStruct) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RequestRegisterStruct) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *RequestRegisterStruct) SetVersion(v string) {
	o.Version = &v
}

func (o RequestRegisterStruct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestRegisterStruct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.Base) {
		toSerialize["base"] = o.Base
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Module) {
		toSerialize["module"] = o.Module
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RepoName) {
		toSerialize["repoName"] = o.RepoName
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.UabUrl) {
		toSerialize["uabUrl"] = o.UabUrl
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableRequestRegisterStruct struct {
	value *RequestRegisterStruct
	isSet bool
}

func (v NullableRequestRegisterStruct) Get() *RequestRegisterStruct {
	return v.value
}

func (v *NullableRequestRegisterStruct) Set(val *RequestRegisterStruct) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestRegisterStruct) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestRegisterStruct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestRegisterStruct(val *RequestRegisterStruct) *NullableRequestRegisterStruct {
	return &NullableRequestRegisterStruct{value: val, isSet: true}
}

func (v NullableRequestRegisterStruct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestRegisterStruct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


